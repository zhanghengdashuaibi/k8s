apiVersion: v1
kind: ConfigMap
metadata:
  name: hadoop-conf
  namespace: hadoop
data:
  HDFS_MASTER_SERVICE: hadoop-hdfs-master
  HDOOP_YARN_MASTER: hadoop-yarn-master
---
apiVersion: v1
kind: Service
metadata:
  name: hadoop-hdfs-master
  namespace: hadoop
  labels:
    app: hadoop-hdfs-master
spec:
  type: NodePort
  selector:
    app: hdfs-master
  ports:
    - name: rpc
      port: 8020
      targetPort: 8020
    - name: http
      port: 9870
      targetPort: 9870
      nodePort: 32007
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hdfs-master
  namespace: hadoop
  labels:
    name: hdfs-master
spec:
  serviceName: "hdfs-master"
  replicas: 1
  selector:
    matchLabels:
      app: hdfs-master
  template:
    metadata:
      labels:
        app: hdfs-master
    spec:
      containers:
      - name: hdfs-master
        volumeMounts:
          - name: dfs
            mountPath: /dfs
          - name: hadoop
            mountPath: /hadoop
        image: bantianyinshi/hadoop:3.2.1
        imagePullPolicy: Always
        ports:
          - containerPort: 9870
          - containerPort: 8020
        env:
          - name: HADOOP_NODE_TYPE
            value: namenode
          - name: HDFS_MASTER_SERVICE
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDFS_MASTER_SERVICE
          - name: HDOOP_YARN_MASTER
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDOOP_YARN_MASTER
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: dfs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi
        storageClassName: hdfs-storage
    - metadata:
        name: hadoop
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi
        storageClassName: hdfs-storage
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: hadoop-datanode
  namespace: hadoop
  labels:
    name: hadoop-datanode
spec:
  serviceName: "hadoop-datanode"
  replicas: 2
  selector:
    matchLabels:
      app: hadoop-datanode
  template:
    metadata:
      labels:
        app: hadoop-datanode
    spec:
      containers:
      - name: hadoop-datanode
        volumeMounts:
          - name: dfs
            mountPath: /dfs
          - name: hadoop
            mountPath: /hadoop
        image: bantianyinshi/hadoop:3.2.1
        imagePullPolicy: Always
        ports:
          - containerPort: 9000
          - containerPort: 9870
        env:
          - name: HADOOP_NODE_TYPE
            value: datanode
          - name: HDFS_MASTER_SERVICE
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDFS_MASTER_SERVICE
          - name: HDOOP_YARN_MASTER
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDOOP_YARN_MASTER
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: dfs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi
        storageClassName: hdfs-storage
    - metadata:
        name: hadoop
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 40Gi
        storageClassName: hdfs-storage
---
apiVersion: v1
kind: Service
metadata:
  name: hadoop-yarn-master
  namespace: hadoop
spec:
  type: NodePort
  selector:
    app: yarn-master
  ports:
    - name: "8030"
      port: 8030
    - name: "8031"
      port: 8031
    - name: "8032"
      port: 8032
    - name: http
      port: 8088
      targetPort: 8088
      nodePort: 32088
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarn-master
  namespace: hadoop
  labels:
    name: yarn-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: yarn-master
  template:
    metadata:
      labels:
        app: yarn-master
    spec:
      containers:
      - name: yarn-master
        image: bantianyinshi/hadoop:3.2.1
        imagePullPolicy: Always
        ports:
          - containerPort: 9000
          - containerPort: 8031
          - containerPort: 9870
          - containerPort: 8030
          - containerPort: 8032
          - containerPort: 8088
        env:
          - name: HADOOP_NODE_TYPE
            value: resourceman
          - name: HDFS_MASTER_SERVICE
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDFS_MASTER_SERVICE
          - name: HDOOP_YARN_MASTER
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDOOP_YARN_MASTER
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: yarn-node
  namespace: hadoop
spec:
  clusterIP: None
  selector:
    app: yarn-node
  ports:
    - port: 8040
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yarn-node
  namespace: hadoop
  labels:
    name: yarn-node
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yarn-node
  template:
    metadata:
      labels:
        app: yarn-node
    spec:
      containers:
      - name: yarn-node
        image: bantianyinshi/hadoop:3.2.1
        imagePullPolicy: Always
        ports:
          - containerPort: 8040
          - containerPort: 8041
          - containerPort: 8042
        env:
          - name: HADOOP_NODE_TYPE
            value: yarnnode
          - name: HDFS_MASTER_SERVICE
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDFS_MASTER_SERVICE
          - name: HDOOP_YARN_MASTER
            valueFrom:
              configMapKeyRef:
                name: hadoop-conf
                key: HDOOP_YARN_MASTER
      restartPolicy: Always
